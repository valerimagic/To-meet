// <auto-generated />
using System;
using DAL.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210425111209__addd_new_fields")]
    partial class _addd_new_fields
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.Entiti.FriendList", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("UserIDFriendID")
                        .HasColumnType("int");

                    b.Property<int?>("UserIDMyID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserIDFriendID");

                    b.HasIndex("UserIDMyID");

                    b.ToTable("FriendLists");
                });

            modelBuilder.Entity("DAL.Entiti.Login", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("DAL.Entiti.Registration", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("loginID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("loginID");

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("DAL.Entiti.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LoginID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relationship")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("LoginID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DAL.Entiti.FriendList", b =>
                {
                    b.HasOne("DAL.Entiti.User", "UserIDFriend")
                        .WithMany()
                        .HasForeignKey("UserIDFriendID");

                    b.HasOne("DAL.Entiti.User", "UserIDMy")
                        .WithMany()
                        .HasForeignKey("UserIDMyID");

                    b.Navigation("UserIDFriend");

                    b.Navigation("UserIDMy");
                });

            modelBuilder.Entity("DAL.Entiti.Registration", b =>
                {
                    b.HasOne("DAL.Entiti.Login", "login")
                        .WithMany()
                        .HasForeignKey("loginID");

                    b.Navigation("login");
                });

            modelBuilder.Entity("DAL.Entiti.User", b =>
                {
                    b.HasOne("DAL.Entiti.Login", "Login")
                        .WithMany()
                        .HasForeignKey("LoginID");

                    b.Navigation("Login");
                });
#pragma warning restore 612, 618
        }
    }
}
